
@section styles{
    <style>
        .card_header {
            height: 50px;
            line-height: 50px;
        }

        .header_button {
            float: right;
            margin-right: 24px;
        }
    </style>



}


<Card :bordered="false" id="div_card">
    <div class="card_header">
        <div class="header_button">
            <i-button type="primary" icon="md-add" size="small" v-on:click="addData">添加</i-button>
        </div>
    </div>
    @*<p slot="title">Borderless card</p>*@
    <i-table v-bind:data="tableData" stripe v-bind:height="tableHeight" v-bind:columns="tableColumns">
        <template slot-scope="{ row, index }" slot="action">         
            <i-button type="error" size="small" icon="ios-trash"></i-button>
        </template>
    </i-table>
    <div style="margin: 10px;overflow: hidden" id="card_foot">
        <div style="float: right;">
            <Page :total="100" :current="1" @@on-change="changePage"></Page>
        </div>
    </div>
</Card>

<Modal v-model="editObj.editWin"
       v-bind:title="editObj.title" v-bind:mask-closable="false">
 这里是弹窗的内容
</Modal>



@section scripts{

    <script>
        window.onresize = function () {
            setTimeout(function () {
                vmounted.countTableHeight();
            });
        }

        //生成从minNum到maxNum的随机数
        function randomNum(minNum, maxNum) {
            switch (arguments.length) {
                case 1:
                    return parseInt(Math.random() * minNum + 1, 10);
                    break;
                case 2:
                    return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);
                    break;
                default:
                    return 0;
                    break;
            }
        }

    </script>
    @*iview相关的对象*@
    <script type="text/javascript">



        let uRole = ['管理员', 'vip', '会员']

        $.extend(vue_methods, {
            mockTableData1 () {
                let data = [];
                for (let i = 0; i < 50; i++) {
                    data.push({
                        UID: 'ZH00' + ('0' + i).substr(-2, 2),
                        URole: randomNum(0, 2),
                        Active: randomNum(0, 1),
                        UEmail: 'xxx' + i + '@@xx.com',
                        Tel: '135' + randomNum(10000000, 99999999)
                    })
                }
                return data;
            },
            changePage () {
                // The simulated data is changed directly here, and the actual usage scenario should fetch the data from the server
                this.tableData = this.mockTableData1();
            },
            addData: function () {
                var edit = this.editObj;
                edit.editWin = true;
                eidt.title = '新增';
            }
        });

        //本页面使用的data
        $.extend(vue_data, {
            tableData: vue_methods.mockTableData1(),
            tableColumns: [
                {
                    title: '账号',
                    key: 'UID'
                },
                 {
                     title: '角色',
                     key: 'URole',
                     render: (h, params) => {
                         return h('span', uRole[params.row.URole]);
                     }
                 },


                {
                    title: '邮箱',
                    key: 'UEmail',

                },
                {
                    title: '电话',
                    key: 'Tel'
                },
                {
                    title: '有效',
                    key: 'Active',
                    render: (h, params) => {
                        return h('span', {
                            style: {
                                color:params.row.Active ?'green':'red'
                            }
                        }, params.row.Active ? '有效' : '无效');
                    }
                },
                 {
                     title: '操作',
                     width: 100,
                     align: 'center',
                     slot: 'action'
                 }
            ],
            tableHeight: 500,
            //编辑窗口对象            
            editObj: {
                editWin: false,
                title:'这里是标题'
            }


        });

        $.extend(vue_computed, {


        });

        var vmounted = {
            countTableHeight: function () {
                console.log("div_card  :" + $("#div_card").height());
                console.log("card_foot :" + $("#card_foot").outerHeight(true));
                vue_data.tableHeight = $("#div_card").height() - $("#card_foot").outerHeight(true) - 35 - $(".card_header").outerHeight(true);
                console.log("tableHeight :" + vue_data.tableHeight);

            }
        }
        $.extend(vue_mounted, vmounted);

    </script>
}