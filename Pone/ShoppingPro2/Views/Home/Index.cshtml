@{
    ViewBag.Title = "XX商城";

}
@section styles{
    <link href="~/Scripts/pbl/fonts/pbl/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Scripts/pbl/fonts/pixelfabric-clothes/style.css" rel="stylesheet" />
    <link href="~/Scripts/pbl/css/demo.css" rel="stylesheet" />
    <link href="~/Scripts/pbl/css/flickity.css" rel="stylesheet" />
    <link href="~/Scripts/pbl/css/component.css" rel="stylesheet" />
    <link href="~/Scripts/camroll_slider/camroll_slider.css" rel="stylesheet" />
    <script src="~/Scripts/pbl/js/modernizr.custom.js"></script>


    <style>
        .el-header {
            display: flex;
            align-items: center;
            background-color: aliceblue;
        }

        body {
            color: #806b6b;
        }

        .div_user {
            width: 10%;
        }

        .txt_right {
            text-align: right;
            margin-bottom: 5px;
        }

        .cart {
            background-color: transparent !important;
            padding: 0px;
            padding-right: 16px;
            position: relative;
            color: #f55f5f;
        }

        .cart__count {
            top: 58%;
            right: 0px;
            background-color: red;
        }

        .el-popover .el-form-item {
            margin-bottom: 0px;
        }

        .no-touch .cart:hover {
            color: red;
        }

        .el-input-number__increase, .el-input-number__decrease {
            width: 20px !important;
        }

        .el-input-number.is-controls-right .el-input__inner {
            padding-right: 25px !important;
            padding-left: 5px !important;
        }

        .cut_ellink > .el-link--inner {
            display: inline-block;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 177px;
        }

        .div_contentName {
            display: flex;
            height: 350px;
        }

        #my-slider {
            flex: 2;
        }

        .elformCl {
            flex: 1.5;
        }

        .div_html img {
            width: 100%;
        }

        .Lottery-content {
            width: 100%;
        }

        .dialog_lo .el-dialog {
            background-color: transparent;
        }

        .dialog_lo .el-dialog__headerbtn .el-dialog__close {
            color:red;
            font-size:18px;
            font-weight:700;
        }
    </style>

}
<el-container>
    <el-header>
        <div style="flex:1;align-items:center;text-align:center;">
            XX商城
        </div>
        <div class="div_user">
            <i class="el-icon-user">
                <el-link type="danger" v-if="!userInfoForm.userInfo" v-on:click="DialogForm.visible=true">请登录</el-link>
                <template v-else>
                    <el-popover placement="bottom-end"
                                title="用户信息"
                                width="300"
                                trigger="click">
                        <el-form label-width="80px" size="mini">
                            <el-form-item label="账号：">
                                <span>{{userInfoForm.userInfo.AccountNumber}}</span>
                            </el-form-item>
                            <el-form-item label="邮箱：">
                                <span>{{userInfoForm.userInfo.Email}}</span>
                            </el-form-item>
                            <el-form-item label="地址：">
                                <span>{{userInfoForm.userInfo.Address}}</span>
                            </el-form-item>
                        </el-form>
                        <el-link type="danger" slot="reference">{{userInfoForm.userInfo.AccountNumber}}</el-link>

                    </el-popover>
                </template>
                <template v-if="!!userInfoForm.userInfo">
                    |
                    <el-link type="danger" v-on:click="offLine">注销</el-link>
                </template>
            </i>

            <el-popover placement="bottom-end"
                        title="购物车"
                        width="680"
                        trigger="manual"
                        v-model="cartVisible">
                <div>
                    <el-table v-bind:data="cartData" show-summary v-bind:summary-method="getSummaries">
                        <el-table-column width="180" prop="SPName" label="商品名称" show-overflow-tooltip>
                            <template slot-scope="scope">
                                <el-link type="primary" class="cut_ellink" v-on:click="showContent(scope.row)">{{scope.row.SPName}}</el-link>
                            </template>
                        </el-table-column>
                        <el-table-column width="150" label="图片">
                            <template slot-scope="scope">
                                <img v-if="scope.row.SPImg.length>0" style="width:120px;height:120px;" v-bind:src="scope.row.SPImg[0].base64" v-bind:alt="scope.row.SPImg[0].filename" />
                            </template>
                        </el-table-column>
                        <el-table-column width="90" label="数量" prop="QCount">
                            <template slot-scope="scope">
                                <el-input-number style="width:80px;" v-on:change="onQCountChange" v-bind:precision="0" v-model="scope.row.QCount" type="number" v-bind:min="1" size="mini" controls-position="right"></el-input-number>
                            </template>
                        </el-table-column>
                        <el-table-column width="80" prop="SPUnitPrice" label="单价"></el-table-column>
                        <el-table-column width="80" label="金额">
                            <template slot-scope="scope">
                                {{scope.row.QCount.mul(scope.row.SPUnitPrice)}}
                            </template>
                        </el-table-column>
                        <el-table-column width="50" label="操作">
                            <template slot-scope="scope">
                                <el-button type="danger" size="mini" icon="el-icon-delete" circle v-on:click="removeSP(scope.row)"></el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </div>
                <div style="text-align:right;padding-right:10px;padding-top:10px;">
                    <el-tag type="danger">折后金额({{dialogLottery.lotteryValue==1?"全额":dialogLottery.lotteryValue.mul(10)}}折)：{{sumPrice.mul(dialogLottery.lotteryValue)}}</el-tag>
                    <el-button type="success" v-bind:disabled="!(userInfoForm.userInfo&&cartData.length>0)">结算</el-button>
                </div>
                <span class="cart" slot="reference" v-on:click="cartVisible=!cartVisible">
                    <i class="cart__icon fa fa-shopping-cart"></i>
                    <span class="cart__count">0</span>
                </span>
            </el-popover>
        </div>
    </el-header>



    <el-main>
        <div class="view">
            <!-- Blueprint header -->
            <!-- Grid -->
            <section class="grid grid--loading">
                <!-- Loader -->
                <img class="grid__loader" src="~/Scripts/pbl/images/grid.svg" width="60" alt="Loader image" />
                <!-- Grid sizer for a fluid Isotope (Masonry) layout -->
                <div class="grid__sizer"></div>
                <template v-for="(d,index) in MainData">
                    <div class="grid__item dresses" v-bind:data-row="JSON.stringify(d)" v-if="(index%4>0)">
                        <div class="slider">
                            <div class="slider__item" v-for="dimg in d.SPImg"><img v-bind:src="dimg.base64" v-bind:alt="dimg.filename" /></div>
                        </div>
                        <div class="meta">
                            <h3 class="meta__title">{{d.SPName}}</h3>
                            <span class="meta__brand">{{d.SPRemark}}</span>
                            <span class="meta__price">￥{{d.SPUnitPrice}}</span>
                        </div>
                        <button class="action action--button action--buy"><i class="fa fa-shopping-cart"></i></button>
                    </div>
                    <div class="grid__item grid__item--size-a shirts" v-else v-bind:data-row="JSON.stringify(d)">
                        <div class="slider">
                            <div class="slider__item" v-for="dimg in d.SPImg"><img v-bind:src="dimg.base64" v-bind:alt="dimg.filename" /></div>
                        </div>
                        <div class="meta">
                            <h3 class="meta__title">{{d.SPName}}</h3>
                            <span class="meta__brand">{{d.SPRemark}}</span>
                            <span class="meta__price">￥{{d.SPUnitPrice}}</span>
                        </div>
                        <button class="action action--button action--buy"><i class="fa fa-shopping-cart"></i></button>
                    </div>
                </template>

            </section>
            <!-- /grid-->
        </div>

    </el-main>

    <el-dialog v-bind:title="DialogForm.title"
               v-bind:visible.sync="DialogForm.visible"
               width="25%"
               v-bind:close-on-click-modal="false">
        <el-form ref="formInline" :model="DialogForm.formEntity" v-bind:rules="ruleInline" label-width="80px">
            <el-form-item prop="UserID" label="账号：">
                <el-input type="text" v-model="DialogForm.formEntity.UserID" placeholder="请输入账号" prefix-icon="el-icon-user-solid">
                </el-input>
            </el-form-item>
            <el-form-item prop="PassWord" label="密码：">
                <el-input type="password" v-model="DialogForm.formEntity.PassWord" placeholder="请输入密码" prefix-icon="el-icon-lock">
                </el-input>
            </el-form-item>
            <el-form-item class="txt_right">
                <el-button v-on:click="onLogin" v-bind:loading="loading" type="primary" size="medium">登陆</el-button>
            </el-form-item>
        </el-form>
    </el-dialog>


    <el-dialog title="商品信息"
               v-bind:visible.sync="dialogSubmit.visible"
               width="50%"
               v-bind:close-on-click-modal="false">
        <div class="div_contentName">
            <div id="my-slider" class="crs-wrap">
                <div class="crs-screen">
                    <div class="crs-screen-roll">
                        <div class="crs-screen-item" v-bind:style="{'background-image': 'url('+d.base64+')'}" v-for="(d,index) in dialogSubmit.Form.SPImg">
                            @*<div class="crs-screen-item-content"><h1>{{d.filename}}</h1></div>*@
                        </div>
                    </div>
                </div>
                <div class="crs-bar">
                    <div class="crs-bar-roll-current"></div>
                    <div class="crs-bar-roll-wrap">
                        <div class="crs-bar-roll">
                            <div class="crs-bar-roll-item" v-bind:style="{'background-image': 'url('+d.base64+')'}" v-for="(d,index) in dialogSubmit.Form.SPImg"></div>
                        </div>
                    </div>
                </div>
            </div>

            <el-form label-width="80px" class="elformCl">
                <el-form-item label="商品名称">
                    {{dialogSubmit.Form.SPName}}
                </el-form-item>
                <el-form-item label="商品简介">
                    {{dialogSubmit.Form.SPRemark}}
                </el-form-item>
            </el-form>

        </div>
        <p>商品详情</p>
        <div v-html="dialogSubmit.Form.SPDetails" class="div_html"></div>
    </el-dialog>


    <el-dialog v-bind:visible.sync="dialogLottery.visible"
               width="30%"
               class="dialog_lo"
               v-bind:close-on-click-modal="false">
        <div class="Lottery-content">
            <img src="~/Scripts/awardRotate/img/1.png" id="shan-img" style="display:none;" />
            <img src="~/Scripts/awardRotate/img/2.png" id="sorry-img" style="display:none;" />
            <div class="banner">
                <div class="turnplate" style="background-image:url(/Scripts/awardRotate/img/turnplate-bg.png);background-size:100% 100%;">
                    <canvas class="item" id="wheelcanvas" v-bind:width="dialogLottery.style.width+'px'" v-bind:height="dialogLottery.style.height+'px'"></canvas>
                    <img class="pointer" src="~/Scripts/awardRotate/img/turnplate-pointer.png" />
                </div>
            </div>
        </div>
    </el-dialog>

</el-container>



@section scripts{
    <script src="~/Scripts/jquery.cookie.js"></script>
    <script src="~/Scripts/camroll_slider/camroll_slider.js"></script>
    <link href="~/Scripts/awardRotate/css/normalize.css" rel="stylesheet" />
    <link href="~/Scripts/awardRotate/css/style.css" rel="stylesheet" />
    <script src="~/Scripts/awardRotate/awardRotate.js"></script>
    <script>
        /**
 ** 乘法函数，用来得到精确的乘法结果
 ** 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。
 ** 调用：accMul(arg1,arg2)
 ** 返回值：arg1乘以 arg2的精确结果
 **/
        function accMul(arg1, arg2) {
            var m = 0, s1 = arg1.toString(), s2 = arg2.toString();
            try {
                m += s1.split(".")[1].length;
            }
            catch (e) {
            }
            try {
                m += s2.split(".")[1].length;
            }
            catch (e) {
            }
            return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);
        }

        // 给Number类型增加一个mul方法，调用起来更加方便。
        Number.prototype.mul = function (arg) {
            return accMul(arg, this);
        };
        /**
 ** 加法函数，用来得到精确的加法结果
 ** 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。
 ** 调用：accAdd(arg1,arg2)
 ** 返回值：arg1加上arg2的精确结果
 **/
        function accAdd(arg1, arg2) {
            var r1, r2, m, c;
            try {
                r1 = arg1.toString().split(".")[1].length;
            }
            catch (e) {
                r1 = 0;
            }
            try {
                r2 = arg2.toString().split(".")[1].length;
            }
            catch (e) {
                r2 = 0;
            }
            c = Math.abs(r1 - r2);
            m = Math.pow(10, Math.max(r1, r2));
            if (c > 0) {
                var cm = Math.pow(10, c);
                if (r1 > r2) {
                    arg1 = Number(arg1.toString().replace(".", ""));
                    arg2 = Number(arg2.toString().replace(".", "")) * cm;
                } else {
                    arg1 = Number(arg1.toString().replace(".", "")) * cm;
                    arg2 = Number(arg2.toString().replace(".", ""));
                }
            } else {
                arg1 = Number(arg1.toString().replace(".", ""));
                arg2 = Number(arg2.toString().replace(".", ""));
            }
            return (arg1 + arg2) / m;
        }

        //给Number类型增加一个add方法，调用起来更加方便。
        Number.prototype.add = function (arg) {
            return accAdd(arg, this);
        };


        $.extend(vue_data, {
            dialogSubmit: {
                visible: false,
                Form: {

                }
            },
            MainData: [],
            DialogForm: {
                title: '登录',
                visible: false,
                formEntity: {
                    UserID: '',
                    PassWord: ''
                }
            },
            ruleInline: {
                UserID: [{ required: true, message: '请输入登录账号!', trigger: 'blur' },
                { type: 'string', min: 4, message: '账号至少4位!', trigger: 'change blur' }],
                PassWord: [
                    { required: true, message: '请输入密码!', trigger: 'blur' },

                ],
            },
            loading: false,
            userInfoForm: {
                userInfo: null

            },
            cartData: [],
            cartVisible:false,
            sumPrice: 0,
            dialogLottery: {
                lotteryValue: 1,
                visible: true,
                style: {
                    width: 422,
                    height: 422
                },
                turnplate: {
                    restaraunts: ["9折", "8.5折", "8折", "7.5折", "7折", "6折 ", "5折", "谢谢参与"],				//大转盘奖品名称
                    colors: ["#FFF4D6", "#FFFFFF", "#FFF4D6", "#FFFFFF", "#FFF4D6", "#FFFFFF", "#FFF4D6", "#FFFFFF", "#FFF4D6", "#FFFFFF"],					//大转盘奖品区块对应背景颜色
                    outsideRadius: 192,			//大转盘外圆的半径
                    textRadius: 155,				//大转盘奖品位置距离圆心的距离
                    insideRadius: 68,			//大转盘内圆的半径
                    startAngle: 0,				//开始角度
                    bRotate: false				//false:停止;ture:旋转
                }
            }


        });

        $.extend(vue_methods, {

            //旋转转盘 item:奖品位置; txt：提示语;
            rotateFn: function (item, txt) {
                var self = this;
                var turnplate = self.dialogLottery.turnplate;
                var angles = item * (360 / turnplate.restaraunts.length) - (360 / (turnplate.restaraunts.length * 2));
                if (angles < 270) {
                    angles = 270 - angles;
                } else {
                    angles = 360 - angles + 270;
                }
                $('#wheelcanvas').stopRotate();
                $('#wheelcanvas').rotate({
                    angle: 0,
                    animateTo: angles + 1800,
                    duration: 8000,
                    callback: function () {
                        if (txt.indexOf("折") > 0) {
                            self.dialogLottery.lotteryValue = 0.1.mul(txt.replace(/[^\d]*/g, ""));
                            self.$message({
                                message: '恭喜你，抽到' + txt,
                                type: 'success',
                                duration:1.5*1000,
                                onClose: function () {
                                    self.dialogLottery.visible = false;
                                },
                            });
                        } else {
                            self.dialogLottery.lotteryValue = 1;
                            self.$message({
                                message: '很遗憾并未抽到折扣优惠哟!',
                                type: 'warning',
                                duration: 1.5 * 1000,
                                onClose: function () {
                                    self.dialogLottery.visible = false;
                                }
                            });
                        }

                        turnplate.bRotate = !turnplate.bRotate;
                    }
                });
            },
            drawRouletteWheel: function () {
                var self = this;
                var turnplate = self.dialogLottery.turnplate;
                var canvas = document.getElementById("wheelcanvas");
                if (canvas.getContext) {
                    //根据奖品个数计算圆周角度
                    var arc = Math.PI / (turnplate.restaraunts.length / 2);
                    var ctx = canvas.getContext("2d");
                    //在给定矩形内清空一个矩形
                    ctx.clearRect(0, 0, self.dialogLottery.style.width, self.dialogLottery.style.height);
                    //strokeStyle 属性设置或返回用于笔触的颜色、渐变或模式
                    ctx.strokeStyle = "#FFBE04";
                    //font 属性设置或返回画布上文本内容的当前字体属性
                    ctx.font = '16px Microsoft YaHei';
                    for (var i = 0; i < turnplate.restaraunts.length; i++) {
                        var angle = turnplate.startAngle + i * arc;
                        ctx.fillStyle = turnplate.colors[i];
                        ctx.beginPath();
                        var wh = self.dialogLottery.style.width / 2;
                        var hh = self.dialogLottery.style.height / 2
                        //arc(x,y,r,起始角,结束角,绘制方向) 方法创建弧/曲线（用于创建圆或部分圆）
                        ctx.arc(wh, hh, turnplate.outsideRadius, angle, angle + arc, false);
                        ctx.arc(wh, hh, turnplate.insideRadius, angle + arc, angle, true);
                        ctx.stroke();
                        ctx.fill();
                        //锁画布(为了保存之前的画布状态)
                        ctx.save();

                        //----绘制奖品开始----
                        ctx.fillStyle = "#E5302F";
                        var text = turnplate.restaraunts[i];
                        var line_height = 17;
                        //translate方法重新映射画布上的 (0,0) 位置
                        ctx.translate(wh + Math.cos(angle + arc / 2) * turnplate.textRadius, hh + Math.sin(angle + arc / 2) * turnplate.textRadius);

                        //rotate方法旋转当前的绘图
                        ctx.rotate(angle + arc / 2 + Math.PI / 2);

                        /** 下面代码根据奖品类型、奖品名称长度渲染不同效果，如字体、颜色、图片效果。(具体根据实际情况改变) **/
                        if (text.indexOf("M") > 0) {//流量包
                            var texts = text.split("M");
                            for (var j = 0; j < texts.length; j++) {
                                ctx.font = j == 0 ? 'bold 20px Microsoft YaHei' : '16px Microsoft YaHei';
                                if (j == 0) {
                                    ctx.fillText(texts[j] + "M", -ctx.measureText(texts[j] + "M").width / 2, j * line_height);
                                } else {
                                    ctx.fillText(texts[j], -ctx.measureText(texts[j]).width / 2, j * line_height);
                                }
                            }
                        } else if (text.indexOf("M") == -1 && text.length > 6) {//奖品名称长度超过一定范围
                            text = text.substring(0, 6) + "||" + text.substring(6);
                            var texts = text.split("||");
                            for (var j = 0; j < texts.length; j++) {
                                ctx.fillText(texts[j], -ctx.measureText(texts[j]).width / 2, j * line_height);
                            }
                        } else {
                            //在画布上绘制填色的文本。文本的默认颜色是黑色
                            //measureText()方法返回包含一个对象，该对象包含以像素计的指定字体宽度
                            ctx.fillText(text, -ctx.measureText(text).width / 2, 0);
                        }

                        //添加对应图标
                        if (text.indexOf("折") > 0) {
                            var img = document.getElementById("shan-img");
                            img.onload = function () {
                                //ctx.drawImage(img, -15, 10);
                            };
                            ctx.drawImage(img, -15, 10);
                        } else if (text.indexOf("谢谢参与") >= 0) {
                            var img = document.getElementById("sorry-img");
                            img.onload = function () {
                                //ctx.drawImage(img, -15, 10);
                            };
                            ctx.drawImage(img, -15, 10);
                        }
                        //把当前画布返回（调整）到上一个save()状态之前
                        ctx.restore();
                        //----绘制奖品结束----
                    }
                }
            },
            getSummaries: function (param) {
                var self = this;
                var sums = [];
                param.columns.forEach((column, index) => {
                    if (index === 0) {
                        sums[index] = '总价';
                        return;
                    }
                    if (['操作', '图片', '单价'].indexOf(column.label) > -1) {
                        sums[index] = '';
                        return;
                    }
                    var values;
                    if (column.label == '金额') {
                        values = param.data.map(function (item) {
                            return item.QCount.mul(item.SPUnitPrice);
                        });

                    } else {
                        values = param.data.map(item => Number(item[column.property]));

                    }
                    if (!values.every(value => isNaN(value))) {
                        sums[index] = values.reduce((prev, curr) => {
                            var value = Number(curr);
                            if (!isNaN(value)) {
                                return prev.add(curr);
                            } else {
                                return prev;
                            }
                        }, 0);

                        if (column.label == '金额') {
                            self.sumPrice = sums[index];
                        }
                        if (column.label != '数量') {
                            sums[index] += ' 元';
                        } else {
                            sums[index] += ' 件';
                        }
                    } else {
                        sums[index] = '';
                    }

                });

                return sums;
            },
            showContent: function (rowData) {
                var t = vue_data.dialogSubmit.Form;
                for (var i in rowData) {
                    t[i] = rowData[i];
                }
                vue_data.dialogSubmit.visible = true;
                this.$nextTick(function () {
                    $("#my-slider").camRollSlider();
                });
            },
            onQCountChange: function (currentValue, oldValue) {
                var cartC = $(".cart__count");
                cartC.html((cartC.html() * 1) + currentValue - oldValue);

            },
            removeSP: function (rowData) {
                var QCount = 0;
                for (var i = 0; i < vue_data.cartData.length; i++) {
                    if (vue_data.cartData[i].SPID == rowData.SPID) {
                        QCount = vue_data.cartData[i].QCount;
                        vue_data.cartData.splice(i, 1);
                        break;
                    }
                }
                var cartC = $(".cart__count");
                cartC.html((cartC.html() * 1) - QCount);
            },
            onLogin: function () {
                var self = this;
                self.$refs["formInline"].validate((valid) => {
                    if (!valid) {
                        return;
                    }
                    self.loading = true;
                    //url, paras, type, success, error, complete, beforeSend, async
                    $.cutPost('@Url.Action("Login", "AdminHome")', self.DialogForm.formEntity, function (msg) {
                        self.userInfoForm.userInfo = msg.Data;
                        var expiresDate = new Date();
                        expiresDate.setTime(expiresDate.getTime() + (4 * 60 * 60 * 1000));
                        $.cookie("userinfo", JSON.stringify(msg.Data), { expires: expiresDate });
                        self.$message.success("登录成功...");
                        self.DialogForm.visible = false;

                    }, null, function () {
                        self.loading = false;
                    });
                })
            },
            offLine: function () {
                var self = this;
                self.pageLoading = true;

                $.cutPost('@Url.Action("offLine", "AdminHome")', null, function (msg) {
                    self.userInfoForm.userInfo = null;
                    $.removeCookie("userinfo")
                    self.$message.success("注销成功!");
                }, null, function () {
                    self.pageLoading = false;
                });
            }

        });

        function rnd(n, m) {
            var random = Math.floor(Math.random() * (m - n + 1) + n);
            return random;

        }
        function addToCartEvent(d) {
            var row = $(d).parents(".grid__item").data("row");
            if (!row && (row = JSON.parse(row))) {
                $Vue.$message.error('添加商品异常!');
                return false;
            }

            var d = vue_data.cartData.find(function (a) { return a.SPID == row.SPID });
            if (d) {
                d.QCount++;
            } else {
                row.QCount = 1;
                vue_data.cartData.push(row);
            }
            return true;
        }

        function loadjs() {
            var sc = document.createElement("script");
            sc.src = '@Url.Content("~/Scripts/pbl/js/isotope.pkgd.min.js")';
            $(sc).appendTo('body');
            sc = document.createElement("script");
            sc.src = '@Url.Content("~/Scripts/pbl/js/flickity.pkgd.min.js")';
            $(sc).appendTo('body');
            sc = document.createElement("script");
            sc.src = '@Url.Content("~/Scripts/pbl/js/main.js")';
            $(sc).appendTo('body');
        }

        $.extend(vue_mounted, {
            loadLottery: function () {
                var self = this;
                self.$nextTick(function () {
                    self.drawRouletteWheel();
                    var turnplate = self.dialogLottery.turnplate;
                    $('.pointer').click(function () {
                        if (turnplate.bRotate) return;
                        turnplate.bRotate = !turnplate.bRotate;
                        //获取随机数(奖品个数范围内)
                        var item = rnd(1, turnplate.restaraunts.length);
                        //奖品数量等于10,指针落在对应奖品区域的中心角度[252, 216, 180, 144, 108, 72, 36, 360, 324, 288]
                        self.rotateFn(item, turnplate.restaraunts[item - 1]);
                        console.log(item);
                    });
                });
            },
            getUserInfo: function () {
                var u = $.cookie("userinfo");
                if (u) {
                    this.userInfoForm.userInfo = JSON.parse(u);
                } else {
                    this.userInfoForm.userInfo = null;// { AccountNumber: 'ZH0001', Email: 'xx@xx.com', Address: 'xx省xx市大待' };
                }

            },
            LoadSP: function () {

                var self = this;
                self.pageLoading = true;
                $.cutPost('@Url.Action("onSearch", "AdminHome")', { SPName: '' }, function (msg) {
                    var c;
                    for (var i = 0; i < msg.Data.length; i++) {
                        c = msg.Data[i];
                        c.SPImg = JSON.parse(c.SPImg);
                    }
                    self.MainData = msg.Data;
                    self.$nextTick(function () {
                        loadjs();
                    });
                }, null, function () {
                    self.pageLoading = false;
                })
            }

        });
    </script>


}